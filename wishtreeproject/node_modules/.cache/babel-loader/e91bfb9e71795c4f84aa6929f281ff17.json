{"ast":null,"code":"var _jsxFileName = \"/Users/yogesh/Documents/React Js/ReactCode/wishtreeproject/src/Component/Report.js\";\nimport React, { Component } from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport ApiService from '../Service/ApiService';\nimport { Redirect } from 'react-router-dom';\nexport class Report extends Component {\n  constructor(props) {\n    super(props);\n    this.option = {\n      title: {\n        display: true,\n        text: 'Report'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            //beginAt:10,\n            beginAtZero: true,\n            stepSize: 10\n          }\n        }]\n      }\n    };\n    let admintoken = sessionStorage.getItem(\"admintoken\");\n    this.state = {\n      reports: {},\n      count: [],\n      adminlog: admintoken\n    };\n  }\n\n  componentDidMount() {\n    let allreport = [];\n    ApiService.Report().then(res => {\n      if (res.status === 200) {\n        allreport = res.data.result;\n      }\n\n      let data = {\n        labels: ['Activate Users', 'Deactive User', 'Total Task'],\n        datasets: [{\n          label: 'Total Activity in Last 7 Days',\n          data: allreport,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)']\n        }]\n      };\n      this.setState({\n        reports: data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.adminlog) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: this.state.reports,\n        options: this.option,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }\n      });\n    }\n  }\n\n}\nexport default Report;","map":{"version":3,"sources":["/Users/yogesh/Documents/React Js/ReactCode/wishtreeproject/src/Component/Report.js"],"names":["React","Component","Bar","ApiService","Redirect","Report","constructor","props","option","title","display","text","scales","yAxes","ticks","beginAtZero","stepSize","admintoken","sessionStorage","getItem","state","reports","count","adminlog","componentDidMount","allreport","then","res","status","data","result","labels","datasets","label","backgroundColor","setState","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SA2CnBC,MA3CmB,GA2CV;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAE;AACH;AACAC,YAAAA,WAAW,EAAC,IAFT;AAGHC,YAAAA,QAAQ,EAAC;AAHN;AADX,SADG;AADH;AALH,KA3CU;AAGf,QAAIC,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAjB;AAEG,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAC,EADI;AAEZC,MAAAA,KAAK,EAAC,EAFM;AAGZC,MAAAA,QAAQ,EAAEN;AAHE,KAAb;AAMN;;AACDO,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,SAAS,GAAG,EAAhB;AACAtB,IAAAA,UAAU,CAACE,MAAX,GACKqB,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBH,QAAAA,SAAS,GAAGE,GAAG,CAACE,IAAJ,CAASC,MAArB;AACH;;AACJ,UAAID,IAAI,GACR;AACIE,QAAAA,MAAM,EAAC,CAAC,gBAAD,EAAkB,eAAlB,EAAkC,YAAlC,CADX;AAEIC,QAAAA,QAAQ,EAAC,CACL;AACIC,UAAAA,KAAK,EAAC,+BADV;AAEIJ,UAAAA,IAAI,EAACJ,SAFT;AAGOS,UAAAA,eAAe,EAAC,CACZ,yBADY,EAEZ,yBAFY,EAGZ,yBAHY;AAHvB,SADK;AAFb,OADA;AAiBD,WAAKC,QAAL,CAAc;AAACd,QAAAA,OAAO,EAACQ;AAAT,OAAd;AACH,KAvBD,EAuBGO,KAvBH,CAuBSC,KAAK,IAAEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAvBhB;AA0BH;;AAsBDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKpB,KAAL,CAAWG,QAAd,EAAuB;AACvB,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,OAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKb,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH,KAPG,MAQA;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AA5EqC;AA+EtC,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport {Bar} from \"react-chartjs-2\";\nimport ApiService from '../Service/ApiService';\nimport { Redirect } from 'react-router-dom';\n\nexport class Report extends Component {\n    constructor(props) {\n        super(props)\n        \n        let admintoken = sessionStorage.getItem(\"admintoken\")\n    \n           this.state = {\n            reports:{},\n            count:[],\n            adminlog: admintoken,\n            \n}\n    }\n    componentDidMount() {\n       \n        let allreport = []\n        ApiService.Report()\n            .then(res => {\n                if (res.status === 200) {\n                    allreport = res.data.result\n                }\n             let data =\n             {\n                 labels:['Activate Users','Deactive User','Total Task'],\n                 datasets:[\n                     {\n                         label:'Total Activity in Last 7 Days',\n                         data:allreport,\n                            backgroundColor:[\n                                'rgba(255, 99, 132, 0.2)',\n                                'rgba(54, 162, 235, 0.2)',\n                                'rgba(255, 206, 86, 0.2)',\n                                \n                            ],\n\n                     }\n                 ], \n            }\n            this.setState({reports:data})\n        }).catch(error=>console.log(error))\n        \n       \n    }\n\n    option = {\n        title: {\n            display: true,\n            text: 'Report'\n        },\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        //beginAt:10,\n                        beginAtZero:true,\n                        stepSize:10\n                    \n                    }\n                }\n            ]\n        }\n    }\n\n    \n    render() {\n        if(this.state.adminlog){\n        return (\n            <div className=\"chart\">\n                <Bar data={this.state.reports} options={this.option}/>\n                \n            </div>\n        )\n    }\n    else{\n        return <Redirect to='/'/>\n    }\n}\n}\n\nexport default Report\n"]},"metadata":{},"sourceType":"module"}