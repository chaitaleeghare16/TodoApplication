{"ast":null,"code":"var _jsxFileName = \"/Users/yogesh/Documents/React Js/ReactCode/wishtreeproject/src/Component/Report.js\";\nimport React, { Component } from 'react';\nimport { Bar } from \"react-chartjs-2\";\nimport ApiService from '../Service/ApiService';\nimport { Redirect } from 'react-router-dom';\nexport class Report extends Component {\n  constructor(props) {\n    super(props);\n    this.option = {\n      title: {\n        display: true,\n        text: 'Report'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            //beginAt:10,\n            beginAtZero: true,\n            stepSize: 10\n          }\n        }]\n      }\n    };\n    let admintoken = sessionStorage.getItem(\"admintoken\");\n    this.state = {\n      reports: {},\n      count: [],\n      adminlog: admintoken\n    };\n  }\n\n  componentDidMount() {\n    let allreport = [];\n    ApiService.Report().then(res => {\n      if (res.status === 200) {\n        allreport = res.data.result;\n      }\n\n      console.log(\"report :\" + allreport);\n      let Data = {\n        labels: ['New Users', 'Activated User', 'Total Task'],\n        datasets: [{\n          label: 'All activity in last 7 days',\n          data: allreport,\n          backgroundColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)']\n        }]\n      };\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    if (this.state.adminlog) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: this.state.reports,\n        options: this.option,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }\n      });\n    }\n  }\n\n}\nexport default Report;","map":{"version":3,"sources":["/Users/yogesh/Documents/React Js/ReactCode/wishtreeproject/src/Component/Report.js"],"names":["React","Component","Bar","ApiService","Redirect","Report","constructor","props","option","title","display","text","scales","yAxes","ticks","beginAtZero","stepSize","admintoken","sessionStorage","getItem","state","reports","count","adminlog","componentDidMount","allreport","then","res","status","data","result","console","log","Data","labels","datasets","label","backgroundColor","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAyCnBC,MAzCmB,GAyCV;AACLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OADF;AAKLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,KAAK,EAAE;AACH;AACAC,YAAAA,WAAW,EAAC,IAFT;AAGHC,YAAAA,QAAQ,EAAC;AAHN;AADX,SADG;AADH;AALH,KAzCU;AAEf,QAAIC,UAAU,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAjB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,KAAK,EAAC,EAFG;AAGTC,MAAAA,QAAQ,EAAEN;AAHD,KAAb;AAOH;;AAGLO,EAAAA,iBAAiB,GACjB;AACE,QAAIC,SAAS,GAAC,EAAd;AACEtB,IAAAA,UAAU,CAACE,MAAX,GAAoBqB,IAApB,CAAyBC,GAAG,IAAE;AAC1B,UAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAEhBH,QAAAA,SAAS,GAAGE,GAAG,CAACE,IAAJ,CAASC,MAArB;AACH;;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWP,SAAvB;AACA,UAAIQ,IAAI,GAAC;AACLC,QAAAA,MAAM,EAAC,CAAC,WAAD,EAAa,gBAAb,EAA8B,YAA9B,CADF;AAELC,QAAAA,QAAQ,EAAC,CACL;AACIC,UAAAA,KAAK,EAAC,6BADV;AAEIP,UAAAA,IAAI,EAAEJ,SAFV;AAIIY,UAAAA,eAAe,EAAC,CACZ,uBADY,EAEZ,wBAFY,EAGZ,uBAHY;AAJpB,SADK;AAFJ,OAAT;AAcF,KApBN,EAoBQC,KApBR,CAoBcC,KAAK,IAAER,OAAO,CAACC,GAAR,CAAYO,KAAZ,CApBrB;AAsBH;;AAsBGC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKpB,KAAL,CAAWG,QAAd,EAAuB;AACvB,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,OAAtB;AAA+B,QAAA,OAAO,EAAE,KAAKb,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAMH,KAPG,MAQA;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AA1EqC;AA8EtC,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport {Bar} from \"react-chartjs-2\";\nimport ApiService from '../Service/ApiService';\nimport { Redirect } from 'react-router-dom';\n\nexport class Report extends Component {\n    constructor(props) {\n        super(props)\n        let admintoken = sessionStorage.getItem(\"admintoken\")\n       \n        this.state = {\n            reports:{},\n            count:[],\n            adminlog: admintoken,\n           \n  \n}\n    }\n\n    \ncomponentDidMount()\n{\n  let allreport=[]\n    ApiService.Report().then(res=>{\n        if(res.status===200){\n          \n            allreport = res.data.result\n        }\n            console.log(\"report :\"+allreport)\n            let Data={\n                labels:['New Users','Activated User','Total Task'],\n                datasets:[\n                    {\n                        label:'All activity in last 7 days',\n                        data: allreport,\n                    \n                        backgroundColor:[\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                    }]\n\n        }}).catch(error=>console.log(error))\n\n}\n\n    option = {\n        title: {\n            display: true,\n            text: 'Report'\n        },\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        //beginAt:10,\n                        beginAtZero:true,\n                        stepSize:10\n                    \n                    }\n                }\n            ]\n        }\n    }\n\n    \n    render() {\n        if(this.state.adminlog){\n        return (\n            <div className=\"chart\">\n                <Bar data={this.state.reports} options={this.option}/>\n                \n            </div>\n        )\n    }\n    else{\n        return <Redirect to='/'/>\n    }\n}\n}\n\n\nexport default Report\n"]},"metadata":{},"sourceType":"module"}